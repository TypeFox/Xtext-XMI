/*
 * generated by Xtext 2.12.0
 */
package io.typefox.xtextxmi.xtree.ide.contentassist.antlr;

import com.google.inject.Inject;
import io.typefox.xtextxmi.xtree.ide.contentassist.antlr.internal.InternalXtreeParser;
import io.typefox.xtextxmi.xtree.services.XtreeGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class XtreeParser extends AbstractContentAssistParser {

	@Inject
	private XtreeGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXtreeParser createParser() {
		InternalXtreeParser result = new InternalXtreeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getNodeAccess().getGroup(), "rule__Node__Group__0");
					put(grammarAccess.getNodeAccess().getGroup_1(), "rule__Node__Group_1__0");
					put(grammarAccess.getNodeAccess().getGroup_1_1(), "rule__Node__Group_1_1__0");
					put(grammarAccess.getNodeAccess().getGroup_1_2(), "rule__Node__Group_1_2__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getNodeAccess().getNameAssignment_0(), "rule__Node__NameAssignment_0");
					put(grammarAccess.getNodeAccess().getRelatedAssignment_1_1_1(), "rule__Node__RelatedAssignment_1_1_1");
					put(grammarAccess.getNodeAccess().getChildrenAssignment_1_2_1(), "rule__Node__ChildrenAssignment_1_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public XtreeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XtreeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
